.container--reaching {
  //margin-left: calc(100vw - 500px);
  @extend .container;

  .row {
    margin-right: 0;
    margin-left: auto;
  }

  @each $breakpoint, $container-max-width in $container-max-widths {
    @debug "Test";
    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
      max-width: calc(
        #{$container-max-width} + ((100vw - #{$container-max-width}) / 2) + 0.5rem
      );
    }
    margin-right: 0;
    margin-left: auto;
    // max-width: calc(
    //   #{$container-max-width} + ((100vw - #{$container-max-width}) / 2) - 0.5rem
    // );

    // &--#{$breakpoint} {
    //   margin-right: 0;
    //   margin-left: auto;
    //   max-width: calc(
    //     #{$container-max-width} + ((100vw - #{$container-max-width}) / 2)
    //   );
    // }
  }
}

// .container--reaching {
//   // Container widths
//   //
//   // Set the container width, and override it for fixed navbars in media queries.

//   @if $enable-grid-classes {
//     @extend .container;

//     // Responsive containers that are 100% wide until a breakpoint
//     @each $breakpoint, $container-max-width in $container-max-widths {
//       &-#{$breakpoint} {
//         @extend .container-fluid;
//       }

//       @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
//         %responsive-container-#{$breakpoint} {
//           max-width: $container-max-width;
//         }

//         // Extend each breakpoint which is smaller or equal to the current breakpoint
//         $extend-breakpoint: true;

//         @each $name, $width in $grid-breakpoints {
//           @if ($extend-breakpoint) {
//             &#{breakpoint-infix($name, $grid-breakpoints)} {
//               @extend %responsive-container-#{$breakpoint};
//             }

//             // Once the current breakpoint is reached, stop extending
//             @if ($breakpoint == $name) {
//               $extend-breakpoint: false;
//             }
//           }
//         }
//       }
//     }
//   }

//   // Row
//   //
//   // Rows contain your columns.

//   @if $enable-grid-classes {
//     .row {
//       @include make-row();
//     }

//     // Remove the negative margin from default .row, then the horizontal padding
//     // from all immediate children columns (to prevent runaway style inheritance).
//     .no-gutters {
//       margin-right: 0;
//       margin-left: 0;

//       > .col,
//       > [class*="col-"] {
//         padding-right: 0;
//         padding-left: 0;
//       }
//     }
//   }

//   // Columns
//   //
//   // Common styles for small and large grid columns

//   @if $enable-grid-classes {
//     @include make-grid-columns();
//   }
// }
